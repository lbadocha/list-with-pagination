{"version":3,"sources":["logo.svg","PostsList.js","App.js","reportWebVitals.js","index.js"],"names":["PostsList","useState","posts","setPosts","pageStart","setPageStart","paginationList","useEffect","fetch","then","response","json","postsArray","console","log","postsList","map","post","className","id","title","body","i","span","onClick","push","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,I,YCiDAA,EA/CG,WAAO,IAAD,EAEMC,mBAAS,IAFf,mBAEbC,EAFa,KAENC,EAFM,OAGcF,mBAAS,GAHvB,mBAGbG,EAHa,KAGFC,EAHE,KAKhBC,EAAiB,GAGrBC,qBAAU,WACNC,MAAM,qDAAD,OAAsDJ,EAAtD,cACAK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZT,EAASS,QAEnB,CAACR,IAgBH,IAdA,IAAIW,EAAYb,EAAMc,KAAI,SAAAC,GACtB,OACI,sBAAKC,UAAU,OAAf,UACI,+BAAKD,EAAKE,GAAV,KAAgBF,EAAKG,SACrB,4BAAIH,EAAKI,SAFcJ,EAAKE,OAnBpB,WA+BZG,GACJ,IAAIC,EAAO,sBAAMC,QAAS,kBAAInB,EAAe,EAAFiB,IAAhC,SAA+CA,EAAE,GAANA,GACtDhB,EAAemB,KAAKF,IAFhBD,EAAI,EAAGA,EAAE,GAAIA,IAAM,EAAnBA,GAMR,OACI,sBAAKJ,UAAU,aAAf,UACIH,EAEAT,MC/BGoB,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCKSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.38da43cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useEffect, useState } from 'react';\r\n\r\nconst PostsList = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [pageStart, setPageStart] = useState(0);\r\n    //const pages = [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95]\r\n    let paginationList = [];\r\n  \r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/posts?_start=${pageStart}&_limit=5`)\r\n            .then(response => response.json())\r\n            .then(postsArray => {\r\n                console.log(postsArray)\r\n                setPosts(postsArray)\r\n            })\r\n    },[pageStart]);\r\n\r\n    let postsList = posts.map(post=>{\r\n        return (\r\n            <div className=\"post\" key={post.id}>\r\n                <h2>{post.id}. {post.title}</h2>\r\n                <p>{post.body}</p>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    /* let paginationList = pages.map((page, index)=>{\r\n        return <span onClick={()=>setPageStart(page)}>{index + 1}</span>\r\n    }) */\r\n\r\n\r\n    for(let i = 0; i<20; i++) {\r\n        let span = <span onClick={()=>setPageStart(i*5)} key={i}>{i+1}</span>;\r\n        paginationList.push(span);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"posts-list\">\r\n           {postsList}\r\n           {/* <button onClick={()=>setPageStart(pageStart+5)}>Get next 5</button> */}\r\n           {paginationList}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PostsList;","import logo from './logo.svg';\nimport './App.css';\nimport PostsList from './PostsList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PostsList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}